[{"C:\\Users\\jochi\\WebstormProjects\\untitled1\\src\\index.js":"1","C:\\Users\\jochi\\WebstormProjects\\untitled1\\src\\reportWebVitals.js":"2","C:\\Users\\jochi\\WebstormProjects\\untitled1\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":2671,"mtime":1608494274104,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"11vmzny",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"10"},"C:\\Users\\jochi\\WebstormProjects\\untitled1\\src\\index.js",[],["17","18"],"C:\\Users\\jochi\\WebstormProjects\\untitled1\\src\\reportWebVitals.js",[],["19","20"],"C:\\Users\\jochi\\WebstormProjects\\untitled1\\src\\App.js",["21","22","23","24"],"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport './App.css';\nimport React, { useRef, useState } from 'react';\nimport 'firebase/analytics';\n\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBixbA06DMNkIyFDc9XfzAYqNoGFhWkE6c\",\n  authDomain: \"easychat-8acbc.firebaseapp.com\",\n  projectId: \"easychat-8acbc\",\n  storageBucket: \"easychat-8acbc.appspot.com\",\n  messagingSenderId: \"1034600916388\",\n  appId: \"1:1034600916388:web:46645a85fdc30857ac4d31\"\n})\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <section>\n          {user ? <ChatRoom /> : <SignIn />}\n        </section>\n      </header>\n    </div>\n  );\n}\nfunction SignIn(){\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  return(\n      <button onClick={signInWithGoogle}>Sign in with Google</button>\n  )\n}\n\nfunction SignOut(){\n    return auth.currentUser && (\n        <button onClick={() => auth.signOut()}> Sign Out</button>\n    )\n}\n\nfunction  ChatRoom(){\n  const messageRef = firestore.collection('messages');\n  const query = messageRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollection(query, {idField: 'id'});\n\n  const [formValue, setFormValue] = useState('');\n\n  const dummy = useRef();\n\n  const sendMessage = async (e) => {\n      e.preventDefault();\n\n      const {uid,photoURL} = auth.currentUser;\n      await messageRef.add({\n        text: formValue,\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            uid,\n          photoURL\n      });\n      setFormValue('');\n      dummy.current.scrollIntoView({behavior :'smooth'});\n  }\n\n   return(\n       <>\n           <main>\n               {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)}\n               <div ref={dummy}></div>\n           </main>\n\n           <form onSubmit={sendMessage}>\n                <input value={formValue} onChange={(e) =>setFormValue(e.target.value)}/>\n                <button type='submit' ></button>\n           </form>\n       </>\n   )\n}\n\nfunction ChatMessage(props){\n    const { text, uid, photoURL} = props.message;\n\n    const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n    return (\n        <div className={'message ${mesageClass}'}>\n            <img src ={photoURL}/>\n            <p>{text}</p>\n        </div>\n    )\n}\nexport default App;\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"25","replacedBy":"29"},{"ruleId":"27","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":46,"column":10,"nodeType":"33","messageId":"34","endLine":46,"endColumn":17},{"ruleId":"31","severity":1,"message":"35","line":93,"column":11,"nodeType":"33","messageId":"34","endLine":93,"endColumn":23},{"ruleId":"36","severity":1,"message":"37","line":96,"column":25,"nodeType":"38","messageId":"39","endLine":96,"endColumn":49},{"ruleId":"40","severity":1,"message":"41","line":97,"column":13,"nodeType":"42","endLine":97,"endColumn":35},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],["43"],["44"],"no-unused-vars","'SignOut' is defined but never used.","Identifier","unusedVar","'messageClass' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]